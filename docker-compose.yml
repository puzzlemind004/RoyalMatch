services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: royalmatch-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE:-royalmatch}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - royalmatch-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: royalmatch-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - royalmatch-network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend (AdonisJS)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
      target: development
    container_name: royalmatch-backend
    restart: unless-stopped
    ports:
      - '${PORT:-3333}:3333'
    environment:
      NODE_ENV: development
      PORT: 3333
      HOST: 0.0.0.0
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DATABASE: ${DB_DATABASE:-royalmatch}
      APP_KEY: ${APP_KEY}
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/build
    networks:
      - royalmatch-network
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  # Frontend (Angular)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      target: development
    container_name: royalmatch-frontend
    restart: unless-stopped
    ports:
      - '4200:4200'
    environment:
      NODE_ENV: development
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/dist
      - /app/.angular
    networks:
      - royalmatch-network
    depends_on:
      - backend
    command: npm start -- --host 0.0.0.0 --poll 2000

networks:
  royalmatch-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
